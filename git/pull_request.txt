Instrucciones para Pull Request en GitHub

1. **Fork del Repositorio:**
   - Haz clic en el botón "Fork" en la parte superior derecha del repositorio original en GitHub.
   - Esto creará una copia personalizada del repositorio en tu cuenta de GitHub.

2. **Clonar el Repositorio Forked:**
   - En tu máquina local, usa el siguiente comando para clonar el repositorio forked:
     ```bash
     git clone [URL_DEL_FORK]
     ```

3. **Crear una Nueva Rama Local:**
   - Cambia al directorio del repositorio clonado:
     ```bash
     cd nombre_del_repositorio
     ```
   - Crea y cambia a una nueva rama (por ejemplo, "add-readme"):
     ```bash
     git checkout -b add-readme
     ```

4. **Realizar Cambios Locales:**
   - Edita el archivo README.md o realiza los cambios necesarios.

5. **Realizar un Commit Local:**
   - Guarda los cambios y realiza un commit:
     ```bash
     git add .
     git commit -m "Agregando README y cambios necesarios."
     ```

6. **Empujar la Nueva Rama al Repositorio Forked:**
   - Empuja la nueva rama al repositorio forked en GitHub:
     ```bash
     git push -u origin add-readme
     ```

7. **Crear la Solicitud de Extracción en GitHub:**
   - Visita tu repositorio forked en GitHub.
   - Cambia a la nueva rama "add-readme".
   - Haz clic en "New Pull Request".
   - Asegúrate de que los cambios se puedan fusionar automáticamente.
   - Proporciona comentarios explicativos y útiles.
   - Verifica el diff para confirmar los cambios.
   - Haz clic en "Create Pull Request".

8. **Responder a Comentarios (si es necesario):**
   - Después de enviar la solicitud, los mantenedores pueden hacer comentarios.
   - Responde a los comentarios y realiza cambios según sea necesario.

¡Listo! Has creado y enviado con éxito una solicitud de extracción en GitHub.

Actualización de Pull Requests

 Se aborda la situación común de recibir comentarios de los mantenedores del proyecto después de enviar un Pull Request y cómo abordar esos 
 comentarios.

## Recepción de Comentarios:

Después de enviar un Pull Request, es común recibir comentarios de los mantenedores del proyecto. Estos comentarios pueden solicitar mejoras, 
como agregar documentación, pruebas o asegurarse de que el cambio cumpla con las pautas de estilo del proyecto.

## Ejemplo de Comentario Recibido:

En este caso, el colaborador recibe un comentario que sugiere que el README es demasiado corto y se pide agregar un ejemplo. 
Se muestra el comentario recibido y la sugerencia de agregar más detalles al archivo README.

## Realizar Cambios para Abordar Comentarios:

Se procede a agregar más detalles al README, incluyendo una explicación de cómo la función rearrange funciona y un ejemplo con nombres.

## Hacer Commit y Push de los Cambios:

Se utiliza el comando `git commit` para realizar un commit local con un mensaje descriptivo. Luego, se utiliza `git push` para enviar los 
cambios al repositorio remoto en GitHub.

## Verificación en GitHub:

Se muestra cómo los commits adicionales se reflejan en el Pull Request en GitHub. Se resalta que GitHub automáticamente agrega los nuevos 
commits al mismo Pull Request si se empujan a la misma rama.

## Revisión de Cambios en GitHub:

Se examina la pestaña "Files Changed" para ver todos los archivos afectados por el Pull Request. Se explica el uso de colores 
(verde para adiciones, rojo para eliminaciones) en la interfaz de GitHub para resaltar los cambios.

## Renderizado de Contenidos Markdown:

Se destaca que GitHub permite ver el contenido Markdown renderizado y resalta los cambios realizados.

